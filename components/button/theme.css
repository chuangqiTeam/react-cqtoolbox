@import "../colors.css";
@import "../variables.css";
@import "./config.css";

.buttonGroup {
  & .squared {
    border-radius: 0;
    &:first-child {
      border-top-left-radius: 4px;
      border-bottom-left-radius: 4px;
    }

    &:last-child {
      border-top-right-radius: 4px;
      border-bottom-right-radius: 4px;
    }
  }

  & .neutral:not([disabled]).flat,
  & .primary:not([disabled]).flat,
  & .accent:not([disabled]).flat {
    border-width: 1px 0 1px 1px;
    border-style: solid;

    &:last-child {
        border-right-width: 1px;
    }
  }
}

.button {
  font-size: var(--font-size);
  font-weight: normal;

  position: relative;

  display: inline-block;

  padding: 0;

  cursor: pointer;
  transition: box-shadow .2s var(--animation-curve-fast-out-linear-in),
  background-color .2s var(--animation-curve-default),
  color .2s var(--animation-curve-default);
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  letter-spacing: 0;
  text-transform: uppercase;

  border: 0;
  outline: none;

  @apply --reset;

  &::-moz-focus-inner {
    border: 0;
  }


  & > * {
    pointer-events: none;
  }

  & > .rippleWrapper {
    overflow: hidden;
  }

  &[disabled] {
    cursor: auto;
    pointer-events: none;

    color: var(--button-disabled-text-color);
  }
}

.normal {
  line-height: var(--button-normal-line-height);
}

.small {
  line-height: var(--button-small-line-height);
}

.large {
  line-height: var(--button-large-line-height);
}

.squared {
  min-width: var(--button-squared-min-width);
  padding: var(--button-squared-padding);

  border-radius: var(--button-border-radius);

  & .icon {
    margin-right: var(--button-squared-icon-margin);

    vertical-align: baseline;
  }
}


.raised {
  composes: button;
  composes: squared;
  &[disabled] {
    border: 1px solid var(--button-disabled-background-color);
    background-color: var(--button-disabled-background-color);
  }
}

.flat {
  background: transparent;

  composes: button;
  composes: squared;
  &[disabled] {
    border: 1px solid transparent;
  }
}

.floating {
  font-size: var(--button-floating-font-size);

  width: var(--button-floating-height);
  height: var(--button-floating-height);

  border-radius: 50%;
  box-shadow: 0 1px 1.5px 0 rgba(0, 0, 0, .12),
  0 1px 1px 0 rgba(0, 0, 0, .24);

  composes: button;

  & .icon:not([data-react-toolbox="tooltip"]) {
    line-height: var(--button-floating-height);
  }

  & > .rippleWrapper {
    border-radius: 50%;
  }

  &.mini {
    font-size: var(--button-floating-mini-font-size);

    width: var(--button-floating-mini-height);
    height: var(--button-floating-mini-height);

    & .icon {
      line-height: var(--button-floating-mini-height);
    }
  }
}

.toggle {
  width: var(--button-height);

  vertical-align: middle;

  border-radius: 50%;
  background: transparent;

  composes: button;

  & > .icon,
  & > .rippleWrapper {
    border-radius: 50%;
  }
}

.primary:not([disabled]) {
  &.raised,
  &.floating {
    color: var(--button-primary-color-contrast);
    border: 1px solid var(--button-primary-color);
    background: var(--button-primary-color);
  }

  &.flat,
  &.toggle {
    color: var(--button-primary-color);
    border: 1px solid var(--button-primary-border-color);
    &:focus:not(:active) {
      background: var(--button-primary-color-hover);
    }
  }

  &.flat:hover {
    background: var(--button-primary-color-hover);
  }
}

.accent:not([disabled]) {
  &.raised,
  &.floating {
    color: var(--button-accent-color-contrast);
    border: 1px solid var(--button-accent-color);
    background: var(--button-accent-color);
  }

  &.flat,
  &.toggle {
    color: var(--button-accent-color);
    border: 1px solid var(--button-accent-border-color);

    &:focus:not(:active) {
      background: var(--button-accent-color-hover);
    }
  }

  &.flat:hover {
    background: var(--button-accent-color-hover);
  }
}

.neutral:not([disabled]) {
  &.raised,
  &.floating {
    color: var(--button-neutral-color-contrast);
    border: 1px solid var(--button-neutral-color);
    background-color: var(--button-neutral-color);
  }

  &.flat,
  &.toggle {
    color: var(--button-neutral-color-contrast);
    border: 1px solid var(--button-neutral-border-color);

    &:focus:not(:active) {
      background: var(--button-neutral-color-hover);
    }
  }

  &.flat:hover {
    background: var(--button-neutral-color-hover);
  }
}
